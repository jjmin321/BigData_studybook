raw_welfare <- read.spss("/Users/jejeongmin/documents/r/work/Koweps_hpc13_2018_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
View(welfare)
# 가공할 데이터를 다양한 형식의 파일로 저장
write.table(welfare, "/Users/jejeongmin/documents/r/work/welfare.txt")
library(xlsx)
write.xlsx(welfare, "/users/jejeongmin/documents/r/work/welfare.xlsx")
# welfare 데이터 확인
View(welfare)
class(welfare) # "data.frame"
dim(welfare) # [1] 14923 1026
str(welfare)
#분석에 사용할 7개 변수를 추출
welfare <- welfare %>% select(h13_g3, h13_g4, h13_g10, h13_g11, p1302_8ag1, h13_eco9, h13_reg7)
#분석에 사용할 7개 변수를 추출
welfare <- welfare %>% select(h13_g3, h13_g4, h13_g10, h13_g11, p1302_8aq1, h13_eco9, h13_reg7)
View(welfare)
# 분석에 사용할 7개의 변수명 변경
welfare <- rename(welfare, sex=h13_g3, birth=h13_g4, marriage=h13_g10, religion=h13_g11, income = p1302_8aq1, code_job = h13_eco9, code_region=h13_reg7)
View(welfare)
# 변수 추출, 변수명 변경 -> 파일로 저장
write.csv(welfare, "/users/jejeongmin/documents/r/work/welfare.csv")
table(welfare$sex)
table(is.na(welfare$sex))
# 성별의 빈도
table(welfare$sex)
# 성별 변수의 값을 변경 - 1: male, 2:female
welfare$sex <- ifelse(welfare$sex==1, "male", "female")
# 성별의 빈도
table(welfare$sex)
# 성별의 빈도 - 그래프
qplot(welfare$sex)
# 1-2. 월급 변수 확인 (결측치, 이상치 확인)
table(welfare$income)
# 1-2. 월급 변수 확인 (결측치, 이상치 확인)
summary(welfare$income)
table(is.na(welfare$income))
# 이상치 데이터 판별 -> 이상치를 결측치로 변경
# 1 ~ 9998 사이의 값이 정상적인 값
welfare$income <- ifelse(welfare$income < 1 | welfare$income > 9998, NA, welfare$income)
table(is.na(welfare$income))
# 1-2. 월급 변수 확인 (결측치, 이상치 확인)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 0.0   140.0   212.0   263.6   342.0  4800.0   10360
summary(welfare$income)
# [2단계] 분석표(통계요약표)
# 2. 성별 별 월급의 평균 분석표
sex_income <- welfare %>% filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc)
# [2단계] 분석표(통계요약표)
# 2. 성별 별 월급의 평균 분석표
sex_income <- welfare %>% filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income = mean(income))
View(sex_income)
View(sex_income)
sex_income
# [3단계] 시각화(그래프)
# 3. 성별에 따른 월급 그래프 - 막대 그래프
ggplot(data=sex_income, aes(x=sex, y=mean_income)) + geom_col()
library(readxl)
library(ggplot2)
library(dplyr)
############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
welfare <- read.csv("/users/jejeongmin/documents/r/work/welfare.csv");
############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
welfare <- read.csv("/users/jejeongmin/documents/r/work/welfare.csv")
View(welfare)
welfare <- welfare %>% select(-x)
View(welfare)
welfare <- welfare %>% select(-X)
welfare <- welfare %>% select(-x)
welfare <- welfare %>% select(-X)
View(welfare)
View(welfare)
############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
welfare <- read.csv("/users/jejeongmin/documents/r/work/welfare.csv")
View(welfare)
View(welfare)
#############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
# [1단계] 변수 검토 및 전처리 (나이, 월급)
# 1-1. 나이 변수 확인 ( 결측치, 이상치 확인)
class(welfare%birth)
#############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
# [1단계] 변수 검토 및 전처리 (나이, 월급)
# 1-1. 나이 변수 확인 ( 결측치, 이상치 확인)
class(welfare$birth)
table(welfare)
table(welfare)
table(welfare$birth)
summary(welfare$birth)
# 출생년도에 대한 통계자료를 확인
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 1907    1947    1967    1969    1989    2017
table(is.na(welfare$birth))
table(is.na(welfare$birth)) # NA 있는지 확인
s
ㄴ <- 1
"ㄴ" <- 1
print("ㄴ")
# 출생년도 변수로 통해 나이 파생변수를 생성
welfare <- within(welfare, age = 2018 - welfare$birth + 1)
# 출생년도 변수로 통해 나이 파생변수를 생성
welfare$age <- 2018 - welfare$birth + 1
summare(welfare$age)
summary(welfare$age)
# 1-2. 월급 변수 확인 (결측치 확인)
class(welfare$income) # integer
summary(welfare$income)
table(is.na(welfare$income))
# 월급 변수의 이상치 데이터 확인 -> 조사설계서를 통하여 확인
# N(1 ~ 9998) : 정상범위의 값
welfare$income <- ifelse(welfare < 1 | welfare > 9998, NA, welfare$income)
# 월급 변수의 이상치 데이터 확인 -> 조사설계서를 통하여 확인
# N(1 ~ 9998) : 정상범위의 값
welfare$income <- ifelse(welfare < 1 | welfare > 9998, NA, welfare$income)
# 월급 변수의 결측치 데이터 확인
table(is.na(welfare$income)) # FALSE : 4563, TRUE : 10360
# 월급 변수의 이상치 데이터 확인 -> 조사설계서를 통하여 확인
# N(1 ~ 9998) : 정상범위의 값
welfare$income <- ifelse(welfare < 1 | welfare > 9998, NA, welfare$income)
# 1-2. 월급 변수 확인 (결측치 확인)
class(welfare$income) # integer
summary(welfare$income)
#만약 결측치 데이터가 있다면 그에 대한 처리를 해주어야 한다.
table(is.na(welfare$birth)) # FALSE : 14923, TRUE : 0
# 출생년도 변수로 통해 나이 파생변수를 생성
welfare$age <- 2018 - welfare$birth + 1
summary(welfare$age)
# 1-2. 월급 변수 확인 (결측치 확인)
class(welfare$income) # integer
summary(welfare$income)
# 월급 변수의 결측치 데이터 확인
table(is.na(welfare$income)) # FALSE : 4563, TRUE : 10360
############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
welfare <- read.csv("/users/jejeongmin/documents/r/work/welfare.csv")
View(welfare)
welfare <- welfare %>% select(-X)
#############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
# [1단계] 변수 검토 및 전처리 (나이, 월급)
# 1-1. 나이 변수 확인 ( 결측치, 이상치 확인)
class(welfare$birth) #integer
table(welfare$birth)
summary(welfare$birth) #int형일 때는 summary로 확인하는 게 좋다.
#만약 결측치 데이터가 있다면 그에 대한 처리를 해주어야 한다.
table(is.na(welfare$birth)) # FALSE : 14923, TRUE : 0
# 출생년도 변수로 통해 나이 파생변수를 생성
welfare$age <- 2018 - welfare$birth + 1
summary(welfare$age)
# 1-2. 월급 변수 확인 (결측치 확인)
class(welfare$income) # integer
summary(welfare$income)
# 월급 변수의 결측치 데이터 확인
table(is.na(welfare$income)) # FALSE : 4563, TRUE : 10360
# 월급 변수의 이상치 데이터 확인 -> 조사설계서를 통하여 확인
# N(1 ~ 9998) : 정상범위의 값
welfare$income <- ifelse(welfare < 1 | welfare > 9998, NA, welfare$income)
# 이상치를 결측치로 바꾸고 확인했더니 결측치가 7개 늘어남 , 0이 7개가 있었다.
table(is.na(welfare$income)) # FALSE : 4556, TRUE : 10367
############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
welfare <- read.csv("/users/jejeongmin/documents/r/work/welfare.csv")
View(welfare)
welfare <- welfare %>% select(-X)
#############
# < 2번째 프로젝트 - 나이에 따른 월급 차이 >
# [1단계] 변수 검토 및 전처리 (나이, 월급)
# 1-1. 나이 변수 확인 ( 결측치, 이상치 확인)
class(welfare$birth) #integer
table(welfare$birth)
summary(welfare$birth) #int형일 때는 summary로 확인하는 게 좋다.
#만약 결측치 데이터가 있다면 그에 대한 처리를 해주어야 한다.
table(is.na(welfare$birth)) # FALSE : 14923, TRUE : 0
# 출생년도 변수로 통해 나이 파생변수를 생성
welfare$age <- 2018 - welfare$birth + 1
summary(welfare$age)
# 1-2. 월급 변수 확인 (결측치 확인)
class(welfare$income) # integer
summary(welfare$income)
# 월급 변수의 결측치 데이터 확인
table(is.na(welfare$income)) # FALSE : 4563, TRUE : 10360
# 월급 변수의 이상치 데이터 확인 -> 조사설계서를 통하여 확인
# N(1 ~ 9998) : 정상범위의 값
welfare$income <- ifelse(welfare$income < 1 | welfare$income > 9998, NA, welfare$income)
# 이상치를 결측치로 바꾸고 확인했더니 결측치가 7개 늘어남 , 0이 7개가 있었다.
table(is.na(welfare$income)) # FALSE : 4556, TRUE : 10367
#이상치를 결측치로 바꾼 후 통계 자료 확인
summary(welfare$income)
# [2단계] 분석표(요약통계표)
# 2. 나이에 따른 월급 평균 분석표
age_income <- welfare %>% filter(!is.na(welfare$income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
View(age_income)
summary(age_income)
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line()
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = cyan)
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "cyan")
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") _
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point()
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point()
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point(color = "red")
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point(color = "cyan" size = 1)
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point(color = "cyan", size = 1)
# [3단계] 시각화(그래프)
# 3. 나이에 따른 월급 평균 그래프 - 선(시계열) 그래프
ggplot(data=age_income, aes(x=age, y=mean_income)) + geom_line(color = "blue") +
geom_point(color = "red", size = 1)
####################################
# < 3번째 프로젝트 - 연령대에 따른 월급의 차이 >
# [1단계] 변수 검토 및 전처리 (연령대, 월급)
# 1-1. 연령대 변수 전처리 - 연령대 파생 변수 생성
# age(나이) 변수로부터 파생변수 ageg(연령대)를 생성
# 연령대의 구분 - 초년 : 30세 미만 , 중년 : 30 ~ 60세 미만 , 노년 : 60세 이상
# ageg - young : 초년, middle: 중년, old : 노년
welfare$ageg <- ifelse(welfare$age < 30, young,
ifelse(welfare$age < 60, middle, old))
####################################
# < 3번째 프로젝트 - 연령대에 따른 월급의 차이 >
# [1단계] 변수 검토 및 전처리 (연령대, 월급)
# 1-1. 연령대 변수 전처리 - 연령대 파생 변수 생성
# age(나이) 변수로부터 파생변수 ageg(연령대)를 생성
# 연령대의 구분 - 초년 : 30세 미만 , 중년 : 30 ~ 60세 미만 , 노년 : 60세 이상
# ageg - young : 초년, middle: 중년, old : 노년
welfare$ageg <- ifelse(welfare$age < 30, "young",
ifelse(welfare$age < 60, "middle", "old"))
View(welfare)
View(welfare)
# 연령대 변수의 빈도 확인
table(welfare$ageg)
# 연령대 변수의 결측치 확인 -> 결측치 데이터는 없음.
table(is.na(welfare$ageg))
# [2단계] 분석표(통계요약표)
ageg_income <- welfare %>% filter(is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
####################################
# < 3번째 프로젝트 - 연령대에 따른 월급의 차이 >
# [1단계] 변수 검토 및 전처리 (연령대, 월급)
# 1-1. 연령대 변수 전처리 - 연령대 파생 변수 생성
# age(나이) 변수로부터 파생변수 ageg(연령대)를 생성
# 연령대의 구분 - 초년 : 30세 미만 , 중년 : 30 ~ 60세 미만 , 노년 : 60세 이상
# ageg - young : 초년, middle: 중년, old : 노년
welfare$ageg <- ifelse(welfare$age < 30, "young",
ifelse(welfare$age < 60, "middle", "old"))
# 연령대 변수의 빈도 확인
table(welfare$ageg)
# 연령대 변수의 결측치 확인 -> 결측치 데이터는 없음.
table(is.na(welfare$ageg))  #FALSE : 14923, TRUE : 0
# [2단계] 분석표(통계요약표)
ageg_income <- welfare %>% filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
# [3단계] 시각화(그래프)
ggplot(data=ageg_income, aes(x=ageg, y=mean_income)) + geom_col()
# x축의 변수명을 지정해서 나열하는 방법 (아주 많이 씀 )
ggplot(data=ageg_income, aes(x=ageg, y=mean_income)) + geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
# 1-3. 월급 변수 전처리
# 1, 2번째 프로젝트에서 이미 처리
View(welfare)
# [2단계] 분석표(통계요약표)
age_sex_income <- welfare %>% filter(!is.na(welfare$income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
View(age_sex_income)
# [3단계] 시각화(그래프)
ggplot(data=age_sex_income, aes(x=ageg, y = mean_income, col = sex)) + geom_line()
# [3단계] 시각화(그래프)
ggplot(data=age_sex_income, aes(x=age, y = mean_income, col = sex)) + geom_line()
welfare$sex <- ifelse(welfare$sex ==1, "male", "female")
# [2단계] 분석표(통계요약표)
age_sex_income <- welfare %>% filter(!is.na(welfare$income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
View(age_sex_income)
# [3단계] 시각화(그래프)
ggplot(data=age_sex_income, aes(x=age, y = mean_income, col = sex)) + geom_line()
# [2단계] 분석표(통계요약표)
ageg_sex_income <- welfare %>% filter(!is.na(income)) %>%
group_by(ageg, sex) %>%
summarise(mean_income = mean(income))
View(ageg_sex_income)
# [3단계] 시각화(그래프)
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income)) + geom_col()
# [3단계] 시각화(그래프)
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, col = sex)) + geom_col() +
# [3단계] 시각화(그래프)
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, col = sex)) + geom_col()
# [3단계] 시각화(그래프)
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, col = sex)) + geom_col()
# [3단계] 시각화(그래프)
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col()
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col()  +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = dodge)  +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = dadge)  +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = "dddge")  +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = "dddge")  +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = "dddge")  + scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data=ageg_sex_income, aes(x=ageg, y=mean_income, fill = sex)) + geom_col(position = "dodge")  + scale_x_discrete(limits = c("young", "middle", "old"))
###############
# < 6번째 프로젝트 - 직업에 따른 월급의 차이 >
# [1단계] 변수 검토 및 전처리 (직업, 월급)
# 1-1 . 직업 변수 전처리
class(welfare$code_job)
summary(welfare$code_job)
# 직업 코드의 결측치 데이터 확인
table(is.na(welfare$code_job))
# code_job(직업코드) 변수를 통해서 job(직업) 파생변수를 생성
# 직종코드에 대한 직업을 가진 데이터프레임을 생성
list_job <- read_excel("/users/jejeongmin/documents/r/data1/Koweps_Codebook.xlsx", col_names= T, sheet=2)
View(list_job)
View(list_job)
View(welfare)
View(list_job)
# 두 개의 데이터프레임을 결합(join)
# welfare, list_job dataframe을 결합하여 job이라는 파생변수를 생성
welfare <- left_join(welfare, list_job, id = "code_job")
View(welfare)
# [2단계] - 분석표(통계요약표)
# 2. 직업에 따른 월급 평균의 차이 (상위 10개, 하위 10개)
# 2-1. 직업별 상위 10개의 월급평균의 차이
job_income_top10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(10)
job_income_top10
# 2-2. 직업별 하위 10개의 월급의 차이
job_income_bottom10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrnage(mean_income)
# 2-2. 직업별 하위 10개의 월급의 차이
job_income_bottom10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(mean_income)
View(job_income_bottom10)
# 2-2. 직업별 하위 10개의 월급의 차이
job_income_bottom10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(mean_income) %>%
head(10)
View(job_income_bottom10)
View(job_income_bottom10)
job_income_bottom10
# [3단계] 시각화(그래프)
# 3-1. 직업별 월급 평균의 차이 - 막대 그래프
# - 상위 10개 -
ggplot(data=job_income_top10, aes(x=job, y=mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_top10, aes(x=job, y=mean_income)) + geom_col() +
coord_flip()
# 가로 막대 그래프
ggplot(data=job_income_top10, aes(x=reorder(job, mean_income), y=mean_income)) + geom_col() +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data==job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# 2-2. 직업별 하위 10개의 월급의 차이
job_income_bottom10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(mean_income) %>%
head(10)
job_income_bottom10
# [3단계] 시각화(그래프)
# 3-1. 직업별 월급 평균의 차이 - 막대 그래프
# - 상위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_top10, aes(x=job, y=mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_top10, aes(x=reorder(job, mean_income), y=mean_income)) +
geom_col() +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data==job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_top10, aes(x=reorder(job, mean_income), y=mean_income)) +
geom_col() +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col +
coord_flip()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col +
coord_flip()
# 2-2. 직업별 하위 10개의 월급의 차이
job_income_bottom10 <- welfare %>% filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(mean_income) %>%
head(10)
job_income_bottom10
# [3단계] 시각화(그래프)
# 3-1. 직업별 월급 평균의 차이 - 막대 그래프
# - 상위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_top10, aes(x=job, y=mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_top10, aes(x=reorder(job, mean_income), y=mean_income)) +
geom_col() +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col +
coord_flip()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_boottom10, aes(x = job, y = mean_income)) + geom_col()
# - 하위 10개 -
# 세로 막대 그래프 - x축의 제목이 길어서 보기에 불편
ggplot(data=job_income_bottom10, aes(x = job, y = mean_income)) + geom_col()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col +
coord_flip()
# 가로 막대 그래프
ggplot(data=job_income_bottom10, aes(x=reorder(job, mean_income), y = mean_income)) + geom_col() +
coord_flip()
